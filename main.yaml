openapi: 3.0.3
info:
  title: SpaceMarine Service
  description: Лабораторная работа №1. Разработать спецификацию в формате OpenAPI для набора веб-сервисов
  version: 1.0.0
paths:
  /spacemarines:
    get:
      summary: Get list of marines
      description: Get list of marines
      operationId: getMarines
      parameters:
        - name: sort
          in: query
          description: Field for sorting.
          required: false
          schema:
            type: string
            enum:
              - id
              - name
              - creationDate
              - health
              - heartCount
              - achievements
              - category
              - starshipId
        - name: sortType
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              default: ASC
              enum:
                - ASC
                - DESC
        - name: filter
          in: query
          required: false
          description: Array of fields used for filtering.
          schema:
            type: array
            items:
              type: string
              example: id[eq]=1
              pattern: '^(id|name|creationDate|health|heartCount|achievements|category|starshipId)\[(eq|ne|gt|lt|lte|gte)\]=.+$'
          style: deepObject
          explode: true
        - name: page
          in: query
          required: false
          description: Specifies the page number to be paginated.
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: pageSize
          in: query
          required: false
          description: The specified page size for pagination.
          schema:
            type: integer
            default: 10
            minimum: 1
      tags:
        - Базовый набор
      responses:
        '200':
          description: Returns an array of flats based on the specified parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpaceMarine'
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 200,
                      "message": "Validation failed",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
    post:
      summary: Add new marine
      description: Add new marine
      operationId: addMarine
      tags:
        - Базовый набор
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpaceMarine'
      responses:
        '200':
          description: Returns the marine that was just added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceMarine'
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 200,
                      "message": "Validation failed",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
  /spacemarines/{id}:
    get:
      summary: Get marine by id
      description: Get marine by id
      operationId: getMarine
      parameters:
        - name: id
          in: path
          required: true
          description: Flat id to find
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Базовый набор
      responses:
        '200':
          description: Returns flat by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceMarine'
        '400':
          description: Invalid id value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 200,
                      "message": "Invalid id value",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Not found",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
    put:
      summary: Update marine by id
      description: Update marine by id
      operationId: updateMarine
      parameters:
        - name: id
          in: path
          required: true
          description: Flat id to update
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Базовый набор
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpaceMarine'
      responses:
        '200':
          description: Returns an updated flat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceMarine'
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 200,
                      "message": "Validation failed",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Not found",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
    delete:
      summary: Delete marine by id
      description: Delete marine by id
      operationId: deleteMarine
      parameters:
        - name: id
          in: path
          required: true
          description: Flat id to delete
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Базовый набор
      responses:
        '200':
          description: The marine was successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 200,
                      "message": "The marine was successfully deleted",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '400':
          description: Invalid id value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Invalid id value",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Not found",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
  /spacemarines/get-lower-achievs:
    get:
      summary: Return the number of marines whose achievements field value is less than the specified one
      description: Return the number of marines whose achievements field value is less than the specified one
      operationId: getLowerAchievs
      parameters:
        - name: achieve
          in: query
          description: Achieve name.
          required: true
          schema:
            type: string
      tags:
        - Дополнительный набор
      responses:
        '200':
          description: Return the number of marines whose achievements field value is less than the specified one
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '400':
          description: Invalid id value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Invalid id value",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
  /spacemarines/pattern/name:
    get:
      summary: Return an array of marines whose name field value starts with the specified substring
      description: Return an array of marines whose name field value starts with the specified substring
      operationId: getMarinesNamePattern
      parameters:
        - name: name
          in: query
          description: Pattern name.
          required: true
          schema:
            type: string
      tags:
        - Дополнительный набор
      responses:
        '200':
          description: Return an array of marines whose name field value starts with the specified substring
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpaceMarine'
        '400':
          description: Invalid id value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Invalid id value",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
  /spacemarines/unique/heart:
    get:
      summary: Return an array of unique values of the heart Count field for all marines
      description: Return an array of unique values of the heart Count field for all marines
      operationId: getUniqueHeart
      tags:
        - Дополнительный набор
      responses:
        '200':
          description: Return an array of unique values of the heart Count field for all marines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueHeart'
        '400':
          description: Invalid id value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Invalid id value",
                      "time": "2022-09-19T00:00:09Z"
                    }
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 500,
                      "message": "Internal server error",
                      "time": "2022-09-19T00:00:09Z"
                    }
components:
  schemas:
    AstartesCategory:
      type: string
      enum:
        - AGGRESSOR
        - ASSAULT
        - INCEPTOR
        - TERMINATOR
      example: TERMINATOR
    Chapter:
      type: object
      properties:
        name:
          type: string
          example: Example
          nullable: false
        marinesCount:
          type: integer
          format: int32
          nullable: true
          example: 8
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          format: int64
        y:
          type: number
          format: double
          maximum: 4
    SpaceMarine:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          nullable: false
          exclusiveMinimum: true
          description: unique identifier of marine
        name:
          type: string
          example: Example
          nullable: false
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
              type: string
              format: date-time
              nullable: false
              example: 2022-09-19T00:00:10Z
        health:
          type: number
          format: double
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 2.0
        heartCount:
          type: integer
          format: int32
          nullable: false
          minimum: 0
          maximum: 3
        achievements:
          type: string
          example: God
          nullable: true
        category:
          $ref: '#/components/schemas/AstartesCategory'
        chapter:
          $ref: '#/components/schemas/Chapter'
        starshipId:
          type: integer
          format: int64
          nullable: true
    UniqueHeart:
      type: array
      items:
        type: integer
        format: int32
    ListSpaceMarine:
      type: array
      items:
        $ref: '#/components/schemas/SpaceMarine'
    Error:
      required:
        - code
        - message
        - time
      properties:
        code:
          nullable: false
          type: integer
        message:
          nullable: false
          type: string
        time:
          type: string
          format: date-time
          example: 2022-09-19T00:00:09Z